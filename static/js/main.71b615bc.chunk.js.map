{"version":3,"sources":["services/cryptoApi.js","services/cryptoNewsApi.js","app/store.js","images/cryptocurrency.png","components/Navbar.jsx","components/Loader.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","components/Homepage.jsx","components/News.jsx","App.js","index.js"],"names":["cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","configureStore","reducer","Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","mode","style","marginTop","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Loader","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","crypto","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","millify","price","marketCap","change","Typography","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Panel","Collapse","Exchanges","exchangesList","exchanges","span","exchange","showArrow","header","marketShare","Homepage","globalStats","console","log","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","demoImageUrl","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.71b615bc.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"61abe04193mshc78fdd9f9670730p157a76jsn7e8e6e107c43\",\n};\n\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timePeriod }) =>\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timePeriod }) =>\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\n    }),\n    getExchanges: builder.query({\n      query: (count) => createRequest(`/exchanges?limit=${count}`),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n  useGetExchangesQuery,\n} = cryptoApi;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsHeaders = {\n  \"x-bingapis-sdk\": \"true\",\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"61abe04193mshc78fdd9f9670730p157a76jsn7e8e6e107c43\",\n};\n\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\n        ),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\nimport icon from \"../images/cryptocurrency.png\";\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize < 768) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\">CryptoTracker</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => setActiveMenu(!activeMenu)}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu\n          theme=\"dark\"\n          mode={screenSize > 768 ? \"horizontal\" : \"vertical\"}\n          className=\"menu\"\n          style={screenSize < 768 ? { marginTop: \"60px\" } : {}}\n        >\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />}>\n            <Link to=\"/exchanges\">Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <Spin />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <div className={!simplified && \"page\"}>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((crypto) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={crypto.id}>\n            <Link to={`/crypto/${crypto.id}`}>\n              <Card\n                title={`${crypto.rank}. ${crypto.name}`}\n                extra={<img className=\"crypto-image\" src={crypto.iconUrl} />}\n                hoverable\n              >\n                <p>Price: {millify(crypto.price)}</p>\n                <p>Market Cap: {millify(crypto.marketCap)}</p>\n                <p>Daily Change: {millify(crypto.change)}</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default Cryptocurrencies;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimestamp.push(\n      new Date(coinHistory.data.history[i].timestamp).toLocaleDateString()\n    );\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: \"Price in USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: \"#0071bd\",\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName} Price Chart\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            {coinHistory?.data?.change}%\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price: $ {currentPrice}\n          </Title>\n        </Col>\n        <Line data={data} options={options} />\n      </Row>\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../services/cryptoApi\";\nimport LineChart from \"./LineChart\";\nimport Loader from \"./Loader\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\n    coinId,\n    timePeriod,\n  });\n\n  if (isFetching) return <Loader />;\n\n  const cryptoDetails = data?.data?.coin;\n\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <div className=\"page\">\n      <Col className=\"coin-detail-container\">\n        <Col className=\"coin-heading-container\">\n          <Title level={2} className=\"coin-name\">\n            {cryptoDetails.name} ({cryptoDetails.slug}) Price\n          </Title>\n          <p>\n            {cryptoDetails.name} live price in US dollars. View value\n            statistice, market cap and supply.\n          </p>\n        </Col>\n        <Select\n          defaultValue=\"7d\"\n          className=\"select-timeperiod\"\n          placeholder=\"Select Time Period\"\n          onChange={(value) => setTimePeriod(value)}\n        >\n          {time.map((date) => (\n            <Option key={date}>{date}</Option>\n          ))}\n        </Select>\n        <LineChart\n          coinHistory={coinHistory}\n          currentPrice={millify(cryptoDetails.price)}\n          coinName={cryptoDetails.name}\n        />\n        <Col className=\"stats-container\">\n          <Col className=\"coin-value-statistics\">\n            <Col className=\"coin-value-statistics-heading\">\n              <Title level={3} className=\"coin-details-heading\">\n                {cryptoDetails.name} Value Statistics\n              </Title>\n              <p>An overview showing the stats of {cryptoDetails.name}</p>\n            </Col>\n            {stats.map(({ icon, title, value }) => (\n              <Col className=\"coin-stats\">\n                <Col className=\"coin-stats-name\">\n                  <Text>{icon}</Text>\n                  <Text>{title}</Text>\n                </Col>\n                <Text className=\"stats\">{value}</Text>\n              </Col>\n            ))}\n          </Col>\n          <Col className=\"other-stats-info\">\n            <Col className=\"coin-value-statistics-heading\">\n              <Title level={3} className=\"coin-details-heading\">\n                Other Statistics\n              </Title>\n              <p>An overview showing the stats of all cryptocurrencies</p>\n            </Col>\n            {genericStats.map(({ icon, title, value }) => (\n              <Col className=\"coin-stats\">\n                <Col className=\"coin-stats-name\">\n                  <Text>{icon}</Text>\n                  <Text>{title}</Text>\n                </Col>\n                <Text className=\"stats\">{value}</Text>\n              </Col>\n            ))}\n          </Col>\n        </Col>\n        <Col className=\"coin-desc-link\">\n          <Row className=\"coin-desc\">\n            <Title level={3} className=\"coin-details-heading\">\n              What is {cryptoDetails.name}\n              {HTMLReactParser(cryptoDetails.description)}\n            </Title>\n          </Row>\n          <Col className=\"coin-links\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Links\n            </Title>\n            {cryptoDetails.links.map((link) => (\n              <Row className=\"coin-link\" key={link.name}>\n                <Title level={5} className=\"link-name\">\n                  {link.type}\n                </Title>\n                <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                  {link.name}\n                </a>\n              </Row>\n            ))}\n          </Col>\n        </Col>\n      </Col>\n    </div>\n  );\n};\n\nexport default CryptoDetails;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useGetExchangesQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery(100);\n  const exchangesList = data?.data?.exchanges;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <div className=\"page\">\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{exchange.rank}</strong>\n                      </Text>\n                      <Avatar\n                        className=\"exchange-image\"\n                        src={exchange.iconUrl}\n                      />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || \"\")}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default Exchanges;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Cryptocurrencies, News } from \"../components\";\nimport Loader from \"./Loader\";\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  console.log(data);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <div className=\"page\">\n      <Title level={2} className=\"heading\">\n        Global Crypto Stats\n      </Title>\n      <Row>\n        <Col span={12}>\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={millify(globalStats.totalExchanges)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap\"\n            value={millify(globalStats.totalMarketCap)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={millify(globalStats.total24hVolume)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={millify(globalStats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies in the world\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/cryptocurrencies\">Show More</Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/news\">Show More</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </div>\n  );\n};\n\nexport default Homepage;\n","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst demoImageUrl =\n  \"https://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg\";\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 12,\n  });\n\n  if (!cryptoNews?.value) return \"Loading...\";\n\n  return (\n    <div className=\"page\">\n      <Row gutter={(24, 24)}>\n        {!simplified && (\n          <Col span={24}>\n            <Select\n              showSearch\n              className=\"select-news\"\n              placeholder=\"Select a Crypto\"\n              optionFilterProp=\"children\"\n              onChange={(value) => setNewsCategory(value)}\n              filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              <Option value=\"Cryptocurrency\">All</Option>\n              {data?.data?.coins.map((coin) => (\n                <Option value={coin.name}>\n                  <img className=\"crypto-image-small\" src={coin.iconUrl} />\n                  {` ${coin.name}`}\n                </Option>\n              ))}\n            </Select>\n          </Col>\n        )}\n        {cryptoNews.value.map((news, i) => (\n          <Col xs={24} sm={12} lg={8} key={i}>\n            <Card hoverable className=\"news-card\">\n              <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n                <div className=\"news-image-container\">\n                  <Title className=\"news-title\" level={4}>\n                    {news.name}\n                  </Title>\n                  <img\n                    style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\n                    src={news?.image?.thumbnail?.contentUrl || demoImageUrl}\n                    alt=\"news\"\n                  />\n                </div>\n                <p>\n                  {news.description > 100\n                    ? `${news.description.substring(0, 100)}...`\n                    : news.description}\n                </p>\n                <div className=\"provider-container\">\n                  <div>\n                    <Avatar\n                      src={\n                        news.provider[0]?.image?.thumbnail?.contentUrl ||\n                        demoImageUrl\n                      }\n                      alt=\"\"\n                    />\n                    <Text className=\"provider-name\">\n                      {news.provider[0]?.name}\n                    </Text>\n                  </div>\n                  <Text>\n                    {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                  </Text>\n                </div>\n              </a>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default News;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport {\n  Navbar,\n  Exchanges,\n  Homepage,\n  Cryptocurrencies,\n  News,\n  CryptoDetails,\n} from \"./components\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: \"white\", textAlign: \"center\" }}\n          >\n            CryptoTracker <br />\n            All rights reserved\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}